import Head from "next/head";
import styles from "../styles/Home.module.css";
import { helperInstance } from "../utils/helpers";
import client from "../utils/apollo-client";
import RecordCard from "../components/RecordCard";
import Form from "../components/Form";
import { useState } from "react";
import { initialFormValues } from "../utils/constants";
import Button from "../components/Button";
import GET_ALL_RECORDS from "../resolvers/queries/records";

export default function Home({ records, numberOfPages }) {
  const [showFormModal, setShowFormModal] = useState(false);
  const [initialValues, setInitialValues] = useState(initialFormValues);
  const [currentPage, setCurrentPage] = useState(1);
  // const [itemOffset, setItemOffset] = useState(0);

  return (
    <div className={styles.container}>
      <Head>
        <title>Home page</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="py-5">
        <h3 className="text-center text-3xl mb-4">
          Welcome to our country records app
        </h3>
        <p className="text-center text-sm">
          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do
          eiusmod tempor incididunt ut labore et dolore magna aliqua.
        </p>
      </div>

      <div className="form my-5 text-center ">
        {/* <input className="" placeholder="search for a record" /> */}
        <button className="btn-new" onClick={() => setShowFormModal(true)}>
          Create a new record
        </button>
      </div>

      <div className="grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-8 grid py-4">
        {records.map((record) => (
          <RecordCard record={record} key={record.id} />
        ))}
      </div>
      <div className="flex flex-row gap-5">
        <Button
          disabled={currentPage === 1}
          label="< Prev"
          onClick={() => handleChangePage("next")}
          variant="new"
        />
        <Button
          disabled={currentPage === numberOfPages}
          label="Next >"
          onClick={() => handleChangePage("prev")}
          variant="new"
        />
      </div>
      <Form
        initialValues={initialValues}
        visible={showFormModal}
        onSubmit={() => {}}
        hide={() => setShowFormModal(false)}
      />
    </div>
  );
}

export async function getStaticProps() {
  const { data } = await client.query({
    query: GET_ALL_RECORDS,
    variables: { limit: helperInstance.itemsPerPage, skip: 0 },
  });

  return {
    props: {
      records: data.getAllRecords,
      numberOfPages: helperInstance.getNumberOfPages(data.getRecordCount),
    },
  };
}
